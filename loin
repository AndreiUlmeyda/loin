#!/bin/bash

BASEDIR=$(readlink -f "$0" | xargs dirname)

function bookmarksAsJson {
	buku -p -j
}

function jsonToLine {
	"$BASEDIR"/jsonToLine.jq
}

function formatColumns {
	"$BASEDIR"/format-columns.awk
}

function searchAsYouType {
	peco --prompt "$MODE:" --null
}

function openInBrowser {
	while read -r selectedUrlAndIndex; do
		selectedUrl=${selectedUrlAndIndex%|*}
		xdg-open "$selectedUrl"
	done
}

function searchAndSelectBookmarks {
	bookmarksAsJson |
	jsonToLine |
	formatColumns |
	searchAsYouType
}

function askUserForTag {
	read -r -p "input the comma separated list of tags to add: " tag
	echo "$tag"
}

function tagBookmarkAtIndex {
	index=$1
	tag=$2
	buku --update "$index" --tag "$tag"
}

function exitWhenEmpty {
	if [[ -z $1 ]]; then
		exit 0
	fi
}

function updateTitle {
	# print buku output, ask for new title, set new title
	index=$1
	buku -p "$index"
	read -r -p "Enter a new title for the bookmark above: " newTitle
	if [[ -n $newTitle ]]; then
	else
		echo "The new title was empty, no update was done."
	fi
}

function updateTitles {
	urlsAndIndices=(`searchAndSelectBookmarks`)
	exitWhenEmpty $urlsAndIndices
	for urlAndIndex in "${urlsAndIndices[@]}"; do
		index="${urlAndIndex#*|}"
		updateTitle "$index"
			buku --tacit -u "$index" -t "$newTitle"
	done
}

function tagBookmarks {
	urlsAndIndices=(`searchAndSelectBookmarks`)
	exitWhenEmpty $urlsAndIndices
	tag=$(askUserForTag)

	for urlAndIndex in "${urlsAndIndices[@]}"; do
		index="${urlAndIndex#*|}"
		tagBookmarkAtIndex "$index" "$tag"
	done
}

function openBookmarks {
	searchAndSelectBookmarks | openInBrowser
}

# set default mode
MODE="open"
BADARGERROR='loin error: invalid argument, for now the only valid argument is the flag "--tag"'

# parse tag mode command line flag, throw error on invalid input
if [[ "$1" == "--tag" ]]; then
	MODE="tag"
elif [[ "$1" ==  "--title" ]]; then
	MODE="title"
elif [[ -n "$1" ]]; then
	echo "$BADARGERROR"
	exit 1
fi

# run
if [[ "$MODE" == "open" ]]; then
	openBookmarks
elif [[ "$MODE" == "tag" ]]; then
	tagBookmarks
elif [[ "$MODE" == "title" ]]; then
	updateTitles
fi
